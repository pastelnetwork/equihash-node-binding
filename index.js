const { is_validSolution } = require('./native/index.node');

// Test vector parameters
const n = 200;
const k = 9;
const input = Buffer.from("block header", "utf8");

// Update nonce according to the new test vector
const nonce = Buffer.from([
    1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
]);

const solutionIntegers = [
    1505, 1380774, 200806, 1787044, 101056, 1697952, 281464, 374899, 263712, 1532496,
    264180, 637056, 734225, 1882676, 1112004, 2093109, 193394, 1459136, 525171, 657480,
    214528, 1221365, 574444, 594726, 501919, 1309358, 1740268, 1989610, 654491,
    1068055, 919416, 1993208, 17599, 1858176, 1315176, 1901532, 108258, 109600,
    1117445, 1936058, 70247, 1036984, 628234, 1800109, 149791, 365740, 345683, 563554,
    21678, 822781, 1423722, 1644228, 792912, 1409641, 805060, 2041985, 453824, 1003179,
    934427, 1068834, 629003, 1456111, 670049, 1558594, 19016, 1343657, 1698188,
    1865216, 45723, 1820952, 1160970, 1585983, 422549, 1973097, 1296271, 2006382,
    650084, 809838, 871727, 1080419, 28500, 1471829, 384406, 619459, 212041, 1466258,
    481435, 866461, 145340, 1403843, 1339592, 1405761, 163425, 1073771, 285027,
    1488210, 167744, 1182267, 1354059, 2089602, 921700, 2059931, 1704721, 1853088,
    585171, 739246, 747551, 1520527, 590255, 1175747, 705292, 998433, 522014, 1931179,
    1629531, 1692879, 588830, 1799457, 963672, 1664237, 775408, 1926741, 907030,
    1466738, 784179, 1972599, 1494787, 1598114, 1736, 1039487, 88704, 1302687, 579526,
    1476728, 1677992, 1854526, 432470, 2062305, 1471132, 1747579, 1521894, 1917599,
    1590975, 1936227, 151871, 1999775, 224664, 461809, 704084, 1306665, 1316156,
    1529628, 876811, 2086004, 1986383, 2012147, 1039505, 1637502, 1432721, 1565477,
    110385, 342650, 659137, 1285167, 367416, 2007586, 445677, 2084877, 285692, 1144365,
    988840, 1990372, 748425, 1617758, 1267712, 1510433, 152291, 1256291, 1722179,
    1995439, 864844, 1623380, 1071853, 1731862, 699978, 1407662, 1048047, 1849702,
    962900, 1083340, 1378752, 1534902, 11843, 115329, 454796, 548919, 148184, 1686936,
    862432, 873854, 60753, 999864, 385959, 1528101, 534420, 678401, 590419, 1962518,
    54984, 1141820, 243305, 1349970, 599681, 1817233, 1632537, 1698724, 580004, 673073,
    1403350, 2026104, 758881, 970056, 1717966, 2062827, 19624, 148580, 609748, 1588928,
    456321, 834920, 700532, 1682606, 20012, 441139, 1591072, 1923394, 194034, 1741063,
    1156906, 1983067, 20703, 1939972, 604581, 963600, 128170, 731716, 606773, 1626824,
    139460, 1386775, 521911, 2043473, 392180, 449532, 895678, 1453340, 7085, 598416,
    1514260, 2061068, 279532, 678363, 943255, 1405306, 119114, 2075865, 592839,
    1972064, 254647, 2078288, 946282, 1567138, 120422, 767626, 213242, 448366, 438457,
    1768467, 853790, 1509505, 735780, 1979631, 1461410, 1462050, 739008, 1572606,
    920754, 1507358, 12883, 1681167, 1308399, 1839490, 85599, 1387522, 703262, 1949514,
    18523, 1236125, 669105, 1464132, 68670, 2085647, 333393, 1731573, 21714, 637827,
    985912, 2091029, 84065, 1688993, 1574405, 1899543, 134032, 179206, 671016, 1118310,
    288960, 861994, 622074, 1738892, 10936, 343910, 598016, 1741971, 586348, 1956071,
    851053, 1715626, 531385, 1213667, 1093995, 1863757, 630365, 1851894, 1328101,
    1770446, 31900, 734027, 1078651, 1701535, 123276, 1916343, 581822, 1681706, 573135,
    818091, 1454710, 2052521, 1150284, 1451159, 1482280, 1811430, 26321, 785837,
    877980, 2073103, 107324, 727248, 1785460, 1840517, 184560, 185640, 364103, 1878753,
    518459, 1984029, 964109, 1884200, 74003, 527272, 516232, 711247, 148582, 209254,
    634610, 1534140, 376714, 1573267, 421225, 1265101, 1078858, 1374310, 1806283,
    2091298, 23392, 389637, 413663, 1066737, 226164, 762552, 1048220, 1583397, 40092,
    277435, 775449, 1533894, 202582, 390703, 346741, 1027320, 523034, 809424, 584882,
    1296934, 528062, 733331, 1212771, 1958651, 653372, 1313962, 1366332, 1784489,
    1542466, 1580386, 1628948, 2000957, 57069, 1398636, 1250431, 1698486, 57289,
    596009, 582428, 966130, 167657, 1025537, 1227498, 1630134, 234060, 1285209, 265623,
    1165779, 68485, 632055, 96019, 1854676, 98410, 158575, 168035, 1296171, 158847,
    1243959, 977212, 1113647, 363568, 891940, 954593, 1987111, 90101, 133251, 1136222,
    1255117, 543075, 732768, 749576, 1174878, 422226, 1854657, 1143029, 1457135,
    927105, 1137382, 1566306, 1661926, 103057, 425126, 698089, 1774942, 911019,
    1793511, 1623559, 2002409, 457796, 1196971, 724257, 1811147, 956269, 1165590,
    1137531, 1381215, 201063, 1938529, 986021, 1297857, 921334, 1259083, 1440074,
    1939366, 232907, 747213, 1349009, 1945364, 689906, 1116453, 1904207, 1916192,
    229793, 1576982, 1420059, 1644978, 278248, 2024807, 297914, 419798, 555747, 712605,
    1012424, 1428921, 890113, 1822645, 1082368, 1392894,
];

// Convert each integer to bytes in little endian and concatenate into a single buffer
const solnBuffer = Buffer.concat(solutionIntegers.map(i => {
    const buf = Buffer.alloc(4); // 4 bytes per u32
    buf.writeUInt32LE(i, 0); // Write the integer in little endian
    return buf;
}));


const isValid = is_validSolution(n, k, input, nonce, solnBuffer);

console.log(`Is valid: ${isValid}`);